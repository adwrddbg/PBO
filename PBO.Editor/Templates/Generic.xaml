<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:li="clr-namespace:LightStudio.PokemonBattle.PBO.UIElements.Interactivity;assembly=PBO.UIElements"
                    xmlns:pm="clr-namespace:LightStudio.PokemonBattle.Data;assembly=PokemonBattle.Data"
                    xmlns:ui="clr-namespace:LightStudio.PokemonBattle.PBO.UIElements;assembly=PBO.UIElements"
                    xmlns:c="clr-namespace:LightStudio.PokemonBattle.PBO.Converters;assembly=PBO.UIElements"
                    xmlns:local="clr-namespace:LightStudio.PokemonBattle.PBO.Editor">
    <DropShadowEffect x:Key="MagentaShadow" ShadowDepth="1" Color="{Binding Color,Source={x:Static ui:Brushes.MagentaM}}" BlurRadius="3" Opacity="1"/>
    <DropShadowEffect x:Key="OrangeShadow" ShadowDepth="1" Color="{Binding Color,Source={x:Static ui:Brushes.OrangeM}}" BlurRadius="3" Opacity="1"/>
    <Style x:Key="FloatableListBox" TargetType="ListBox">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="1,0,1,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <!--<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>-->
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" li:FloatingBehavior.FloatingElement="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0">
                                            <i:Interaction.Behaviors>
                                                <li:FloatingBehavior />
                                            </i:Interaction.Behaviors>
                                        </ScrollContentPresenter>
                                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                                        <!--<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>-->
                                        <ScrollBar Name="PART_HorizontalScrollBar" Visibility="Collapsed"/>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PokemonIcon" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Padding" Value="3,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <ContentPresenter Margin="{TemplateBinding Padding}">
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate>
                                <UserControl Background="Transparent">
                                    <UserControl.ToolTip>
                                        <ToolTip Background="{x:Static ui:Brushes.GrayF}">
                                            <StackPanel DataContext="{Binding Model}">
                                                <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
                                                <TextBlock Text="{Binding MoveIds[0],Converter={x:Static c:IdMoveConverter.I}}"/>
                                                <TextBlock Text="{Binding MoveIds[1],Converter={x:Static c:IdMoveConverter.I}}"/>
                                                <TextBlock Text="{Binding MoveIds[2],Converter={x:Static c:IdMoveConverter.I}}"/>
                                                <TextBlock Text="{Binding MoveIds[3],Converter={x:Static c:IdMoveConverter.I}}"/>
                                            </StackPanel>
                                        </ToolTip>
                                    </UserControl.ToolTip>
                                    <UserControl.ContextMenu>
                                        <ContextMenu ItemsSource="{Binding Commands}" ItemContainerStyle="{x:Static ui:Controls.CommandMenu}"/>
                                    </UserControl.ContextMenu>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding EditCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Grid Width="50" Height="50">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Rectangle x:Name="iconbg" Width="32" Height="32" Fill="{x:Static ui:Brushes.SelectedItemBg}" Visibility="Hidden"/>
                                        <Image Width="32" Height="32" Source="{Binding Icon}"/>
                                        <TextBlock x:Name="text" Grid.Row="1" HorizontalAlignment="Center" Text="{Binding Model.Name}" TextTrimming="CharacterEllipsis"/>
                                    </Grid>
                                </UserControl>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding HasRemainingEv}" Value="True">
                                        <Setter TargetName="text" Property="Effect" Value="{StaticResource OrangeShadow}"/>
                                        <!--a000ff-->
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CanLearnMore}" Value="True">
                                        <Setter TargetName="text" Property="Effect" Value="{StaticResource MagentaShadow}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                                        <Setter TargetName="text" Property="Effect" Value="{x:Null}"/>
                                        <Setter TargetName="text" Property="Background" Value="{x:Static ui:Brushes.SelectedItemBg}"/>
                                        <Setter TargetName="iconbg" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="FolderIcon">
        <UserControl Height="30" Width="153">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="DragEnter">
                    <ei:ChangePropertyAction TargetName="bg" PropertyName="Fill" Value="{Binding BorderBrush}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="DragLeave">
                    <ei:ChangePropertyAction TargetName="bg" PropertyName="Fill" Value="{Binding Background}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="Drop">
                    <ei:ChangePropertyAction TargetName="bg" PropertyName="Fill" Value="{Binding Background}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding OpenCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Grid>
                <Grid.ContextMenu>
                    <ContextMenu x:Name="menu" ItemsSource="{Binding FolderCommands}" ItemContainerStyle="{x:Static ui:Controls.CommandMenu}"/>
                </Grid.ContextMenu>
                <Path Name="bg" Data="M0,6 L151,6 145,29 0,29" Fill="{Binding Background}" Stroke="{Binding BorderBrush}" StrokeThickness="0" Stretch="None" VerticalAlignment="Bottom" SnapsToDevicePixels="True"/>
                <Image Height="29" Width="24" Source="{Binding Icon}" HorizontalAlignment="Left" Margin="2,1,0,1"/>
                <TextBlock Name="title" Text="{Binding Name}" Visibility="{Binding Renaming, Converter={x:Static local:BoolVisibilityC.I}, ConverterParameter=inverse}" TextTrimming="CharacterEllipsis" TextWrapping="WrapWithOverflow" Foreground="#d8d8d8" VerticalAlignment="Bottom" Margin="30,0,8,4" SnapsToDevicePixels="True"/>
                <ui:UITextBox EndEditCommand="{Binding EndRenamingCommand}" IsEditing="{Binding Renaming,Mode=OneWay}" Text="{Binding Name}" MaxLength="{x:Static pm:UserDataRules.NameLength}" Foreground="White" FontWeight="Normal" Padding="0" BorderThickness="0" Margin="30,0,8,3" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Background="Black"/>
            </Grid>
		</UserControl>
        <DataTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="bg" Property="StrokeThickness" Value="2"/>
                <Setter TargetName="title" Property="FontWeight" Value="Bold"/>
                <Setter TargetName="title" Property="Foreground" Value="White"/>
            </Trigger>
            <DataTrigger Binding="{Binding IsOpen,ElementName=menu}" Value="True">
                <Setter TargetName="bg" Property="StrokeThickness" Value="2"/>
                <Setter TargetName="title" Property="FontWeight" Value="Bold"/>
                <Setter TargetName="title" Property="Foreground" Value="White"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsTeam}" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip>
                            <StackPanel Orientation="Horizontal" DataContext="{Binding Pokemons}">
                                <Image Height="32" Width="32" Source="{Binding [0].Icon}"/>
                                <Image Height="32" Width="32" Source="{Binding [1].Icon}"/>
                                <Image Height="32" Width="32" Source="{Binding [2].Icon}"/>
                                <Image Height="32" Width="32" Source="{Binding [3].Icon}"/>
                                <Image Height="32" Width="32" Source="{Binding [4].Icon}"/>
                                <Image Height="32" Width="32" Source="{Binding [5].Icon}"/>
                            </StackPanel>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsTeam}" Value="True"/>
                    <Condition Binding="{Binding CanAddPokemon}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="title" Property="Effect" Value="{StaticResource MagentaShadow}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsBox}" Value="True"/>
                    <Condition Binding="{Binding Model.Pokemons.Count}" Value="0"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="title" Property="Effect" Value="{StaticResource OrangeShadow}"/>
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="OpenFolder">
        <Grid Background="White" Height="200" Width="320">
            <Grid.ContextMenu>
                <ContextMenu ItemsSource="{Binding PokemonCommands}" ItemContainerStyle="{x:Static ui:Controls.CommandMenu}"/>
            </Grid.ContextMenu>
            <Border li:FloatingBehavior.FloatingElement="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Background="{Binding BorderBrush}" Height="18" VerticalAlignment="Top">
                <i:Interaction.Behaviors>
                    <li:FloatingBehavior />
                </i:Interaction.Behaviors>
                <Border Margin="0,1" BorderBrush="{x:Static ui:Brushes.GrayF}" BorderThickness="0,1"/>
            </Border>
            <TextBlock IsHitTestVisible="False" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,0,0,0" Foreground="{x:Static ui:Brushes.GrayF}">
                <Run Text="{Binding Name, Mode=OneWay}" />
                <Run Text="  "/>
                <Run Text="{Binding Pokemons.Count, Mode=OneWay}"/>
                <Run Text="/"/>
                <Run Text="{Binding Size, Mode=OneWay}"/>
            </TextBlock>
            <Button Command="{Binding CloseCommand}" ToolTip="{Binding [Close], Source={x:Static pm:DataService.String}, Mode=OneWay}" Style="{x:Static ui:Controls.XButton}" FontSize="15" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-2,5,0" Foreground="{x:Static ui:Brushes.GrayF}"/>
            <ListBox Margin="0,18,0,0" AllowDrop="True" ItemsSource="{Binding Pokemons}" ItemsPanel="{x:Static ui:Controls.WrapPanel}" BorderBrush="{Binding BorderBrush}" li:DragDropState.ItemOrientation="Horizontal">
                <ListBox.Style>
                    <Style TargetType="ListBox" BasedOn="{StaticResource FloatableListBox}">
                        <Setter Property="ItemContainerStyle" Value="{StaticResource PokemonIcon}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTeam}" Value="True">
                                <Setter Property="ItemContainerStyle">
                                    <Setter.Value>
                                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource PokemonIcon}">
                                            <Setter Property="Padding" Value="1,0"/>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>
                <i:Interaction.Behaviors>
                    <li:DragDropState>
                        <li:DragDropState.SourceHandler>
                            <local:FolderDragDropSource/>
                        </li:DragDropState.SourceHandler>
                        <li:DragDropState.TargetHandler>
                            <local:FolderDragDropTarget/>
                        </li:DragDropState.TargetHandler>
                    </li:DragDropState>
                    <li:AdornerBehavior>
                        <li:AdornerBehavior.Adorners>
                            <li:AdornerProxy AdornerType="li:DropHighlightAdorner" AdornerStyle="{x:Static local:Resources.PokemonHighlightAdorner}"/>
                            <li:AdornerProxy AdornerType="li:DropInsertionAdorner" AdornerStyle="{x:Static local:Resources.FolderInsertionAdorner}"/>
                            <li:AdornerProxy AdornerType="li:DragAdorner"  AdornerStyle="{x:Static local:Resources.PokemonDragAdorner}"/>
                        </li:AdornerBehavior.Adorners>
                    </li:AdornerBehavior>
                </i:Interaction.Behaviors>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DragOver">
                        <li:BringToFrontAction Target="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ListBox>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="SearchResult">
        <Grid Background="White" Height="400" Width="500" li:FloatingBehavior.FloatingElement="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}">
            <Border li:FloatingBehavior.FloatingElement="{Binding RelativeSource={RelativeSource AncestorType=ContentPresenter}}" Background="{x:Static ui:Brushes.GrayB1}" Height="18" VerticalAlignment="Top">
                <i:Interaction.Behaviors>
                    <li:FloatingBehavior />
                </i:Interaction.Behaviors>
                <Border Margin="0,1" BorderBrush="#b0b0b0" BorderThickness="0,1"/>
            </Border>
            <TextBlock IsHitTestVisible="False" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="#b0b0b0">
                <Run Text="{Binding [Search Result], Source={x:Static pm:DataService.String}, Mode=OneWay}" />
                <Run Text="  "/>
                <Run Text="{Binding Pokemons.Count, Mode=OneWay}"/>
            </TextBlock>
            <Button Command="{Binding CloseCommand}" ToolTip="{Binding [Close], Source={x:Static pm:DataService.String}, Mode=OneWay}" Style="{x:Static ui:Controls.XButton}" FontSize="15" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,5,0" Foreground="#b0b0b0"/>
            <ListBox Background="White" BorderBrush="#b0b0b0" Margin="0,18,0,0" Style="{StaticResource FloatableListBox}" ItemsSource="{Binding Pokemons}" ItemsPanel="{x:Static ui:Controls.WrapPanel}" ItemContainerStyle="{StaticResource PokemonIcon}">
                <ListBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="GroupItem">
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <Expander IsExpanded="True" BorderBrush="#FFA4B97F" BorderThickness="0,0,0,1">
                                                <Expander.Header>
                                                    <TextBlock FontWeight="Bold" Margin="5,0,0,0">
                                                        <Run Text="{Binding Name.Name, Mode=OneWay}"/>
                                                        <Run Text="  "/>
                                                        <Run Text="{Binding ItemCount, Mode=OneWay}"/>
                                                    </TextBlock>
                                                </Expander.Header>
                                                <Expander.Content>
                                                    <ItemsPresenter />
                                                </Expander.Content>
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ListBox.GroupStyle>
            </ListBox>
        </Grid>
    </DataTemplate>
</ResourceDictionary>
