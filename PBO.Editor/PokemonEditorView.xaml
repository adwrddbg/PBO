<UserControl x:Class="LightStudio.PokemonBattle.PBO.Editor.PokemoEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:li="clr-namespace:LightStudio.PokemonBattle.PBO.UIElements.Interactivity;assembly=PBO.UIElements"
             xmlns:pm="clr-namespace:LightStudio.PokemonBattle.Data;assembly=PokemonBattle.Data"
             xmlns:c="clr-namespace:LightStudio.PokemonBattle.PBO.Converters;assembly=PBO.UIElements"
             xmlns:ui="clr-namespace:LightStudio.PokemonBattle.PBO.UIElements;assembly=PBO.UIElements"
             xmlns:local="clr-namespace:LightStudio.PokemonBattle.PBO.Editor"
             mc:Ignorable="d" UseLayoutRounding="True" Background="#f5f5f5" MinWidth="560" MinHeight="365" Width="560">
    <UserControl.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="BGLight" Color="#e0e0e0"/><!--Opacity="0.82"/-->
            <SolidColorBrush x:Key="BGDark" Color="#505060"/><!--Opacity="0.5"/-->
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Name="maincontent" Margin="0,18,0,0" HorizontalAlignment="Center" Width="560">
        <Grid.Resources>
        	<ItemsPanelTemplate x:Key="VirtualPanel">
        		<VirtualizingStackPanel/>
        	</ItemsPanelTemplate>
        	<Style TargetType="TextBox">
        		<Setter Property="BorderBrush" Value="#4C808080"/>
        		<Setter Property="Background" Value="White"/>
        	</Style>
        	<Style TargetType="ui:ClearableComboBox">
        		<Setter Property="BorderBrush" Value="#4C808080"/>
        		<Setter Property="CanClear" Value="False"/>
        		<Setter Property="Background" Value="White"/>
        	</Style>
        	<Style TargetType="Label">
        		<Setter Property="Foreground" Value="#585050"/>
        		<Setter Property="FontWeight" Value="Bold"/>
        		<Setter Property="Padding" Value="4,0"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Label}">
        					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
        						<StackPanel Margin="{TemplateBinding Padding}" Orientation="Horizontal" VerticalAlignment="Center">
        							<Rectangle Width="3" Height="3" Fill="{TemplateBinding Foreground}" Opacity="0.85">
        								<Rectangle.Effect>
        									<DropShadowEffect BlurRadius="1" ShadowDepth="1.5" Color="#a0a0a8" Direction="225"/>
        								</Rectangle.Effect>
        							</Rectangle>
        							<TextBlock Text="{TemplateBinding Content}" Margin="3,0,0,0" Style="{x:Null}"/>
        						</StackPanel>
        					</Border>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style TargetType="{x:Type ui:NumericUpdown}">
        		<Setter Property="BorderBrush" Value="#4C808080"/>
        		<Setter Property="Foreground" Value="Gray"/>
        		<Setter Property="HorizontalAlignment" Value="Left"/>
        	</Style>
        </Grid.Resources>
        <Border Margin="0,-18,0,0" Height="18" VerticalAlignment="Top" BorderThickness="0,1" BorderBrush="{x:Static ui:Brushes.GrayB1}" Background="{x:Static ui:Brushes.GrayB1}" d:IsLocked="True">
            <Border Style="{x:Null}" BorderThickness="0,1" BorderBrush="#b0b0b0"/>
        </Border>
        <Button FontSize="12" Foreground="#b0b0b0" Background="White" BorderBrush="White" ToolTip="{Binding [Open],Source={x:Static pm:DataService.String}}" Content="{Binding PokemonViewModel.Folder.Name, Mode=OneWay}" Command="{Binding PokemonViewModel.Folder.OpenCommand}" VerticalAlignment="Top" Margin="0,-18,70,0" Style="{x:Static ui:Controls.XButton}"/>
        <Rectangle Name="grid" Margin="0,15,0,0"/>
        <Grid Margin="15,15,15,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="200">
        	<Grid.Resources>
        		<Style TargetType="{x:Type RowDefinition}">
        			<Setter Property="Height" Value="25" />
        		</Style>
                <Style TargetType="{x:Type ContentPresenter}">
                    <Setter Property="Grid.Row" Value="2"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="ContentTemplate" Value="{x:Static ui:Labels.BattleType}"/>
                    <Setter Property="Width" Value="45"/>
                </Style>
            </Grid.Resources>
        	<Grid.RowDefinitions>
        		<RowDefinition/>
        		<RowDefinition/>
        		<RowDefinition/>
        		<RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label Content="{Binding [Name], Source={x:Static pm:DataService.String}}"/>
        	<TextBox Text="{Binding Model.Name}" MaxLength="{x:Static pm:UserDataRules.NameLength}"  Width="155" HorizontalAlignment="Right"/>
        	<Label Grid.Row="1" Content="{Binding [Pokemon], Source={x:Static pm:DataService.String}}"/>
            <ui:ClearableComboBox ItemsSource="{x:Static pm:DataService.Pokemons}" SelectedItem="{Binding PokemonType}" ItemTemplate="{x:Static local:Resources.PokemonType}" Grid.Row="1" ItemsPanel="{StaticResource VirtualPanel}" Margin="45,0,0,0"/><!-- VirtualizingStackPanel.VirtualizationMode="Recycling"/>-->
            <Label Grid.Row="2" HorizontalAlignment="Left" Content="{Binding [Type], Source={x:Static pm:DataService.String}}"/>
            <ContentPresenter Content="{Binding PokemonType.Type1}" Margin="45,0,0,0"/>
            <ContentPresenter Content="{Binding PokemonType.Type2}" Margin="93,0,0,0"/>
        	<Label Grid.Row="3" Content="{Binding [Lv], Source={x:Static pm:DataService.String}}"/>
            <ui:NumericUpdown Minimum="1" Maximum="100" Grid.Row="3" Value="{Binding Model.Lv,Mode=TwoWay}" LargeChange="50" Canvas.Left="45" Width="53" Margin="45,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
        	<Label Grid.Row="3" Content="{Binding [Gender], Source={x:Static pm:DataService.String}}" Canvas.Left="94" Canvas.Top="58" BorderThickness="0" HorizontalAlignment="Right" Margin="0,0,56,0"/>
        	<ui:ClearableComboBox x:Name="genderselector" Grid.Row="3" ItemsSource="{Binding PokemonType, Converter={x:Static local:AvailableGendersC.I}}" SelectedItem="{Binding Model.Gender}" ItemTemplate="{x:Static ui:Labels.GenderShowNone}" Margin="150,0,0,0"/>
            <Label Grid.Row="4" Content="{Binding [Ability], Source={x:Static pm:DataService.String}}"/>
            <ui:ClearableComboBox x:Name="abilitycombo" Margin="5,0,102,0" Grid.Row="5" ItemsSource="{Binding PokemonType, Converter={x:Static local:AvailableAbilitiesC.I}}" SelectedItem="{Binding Model.AbilityId, Converter={x:Static local:IdAbilityC.I}}" ItemTemplate="{x:Static ui:Labels.Ability}" ItemContainerStyle="{x:Null}" ToolTip="{Binding SelectedItem.Description,RelativeSource={RelativeSource Self}}"/>
        	<Label Grid.Row="6" Content="{Binding [Item], Source={x:Static pm:DataService.String}}" VerticalAlignment="Top" Height="25"/>
            <ui:ClearableComboBox ItemsSource="{x:Static pm:DataService.Items}" SelectedItem="{Binding Model.ItemId, Converter={x:Static local:IdItemC.I}}" ItemTemplate="{x:Static ui:Labels.Item}" ItemsPanel="{StaticResource VirtualPanel}" CanClear="True" ToolTip="{Binding SelectedItem.Description,RelativeSource={RelativeSource Self}}" Grid.Row="7" Margin="5,0,102,0"/>
        	<Image Grid.Row="4" Grid.RowSpan="4" Height="96" Width="96" HorizontalAlignment="Right" VerticalAlignment="Bottom">
        		<Image.Source>
        			<MultiBinding Converter="{x:Static local:FrontImageC.I}">
        				<Binding Path="Model.PokemonTypeId"/>
        				<Binding Path="Model.Gender"/>
        			</MultiBinding>
        		</Image.Source>
                <Image.ToolTip>
                    <ToolTip BorderThickness="0">
                        <Grid DataContext="{Binding PokemonType}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding [Height],Source={x:Static pm:DataService.String}}"/>
                            <TextBlock Grid.Column="1" Margin="10,0,0,0">
                                <TextBlock Text="{Binding Height}"/>m
                            </TextBlock>
                            <TextBlock Text="{Binding [Weight],Source={x:Static pm:DataService.String}}" Grid.Row="1"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" Margin="10,0,0,0">
                                <TextBlock Text="{Binding Weight}"/>kg
                            </TextBlock>
                        </Grid>
                    </ToolTip>
                </Image.ToolTip>
        	</Image>
        </Grid>
        <StackPanel Margin="16,230,15,0" HorizontalAlignment="Left" VerticalAlignment="Top" Orientation="Horizontal">
        	<StackPanel.Resources>
        		<Style TargetType="{x:Type ContentPresenter}">
        			<Setter Property="ContentTemplate" Value="{x:Static local:Resources.SelectedMove}"/>
        			<Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="-2,0"/>
        			<EventSetter Event="UIElement.MouseDown" Handler="SelectedMove_MouseDown"/>
        		</Style>
        	</StackPanel.Resources>
        	<ContentPresenter Content="{Binding Model.MoveIds[0], Converter={x:Static local:MoveLearnItemC.I}}"/>
            <ContentPresenter Content="{Binding Model.MoveIds[1], Converter={x:Static local:MoveLearnItemC.I}}"/>
            <ContentPresenter Content="{Binding Model.MoveIds[2], Converter={x:Static local:MoveLearnItemC.I}}"/>
            <ContentPresenter Content="{Binding Model.MoveIds[3], Converter={x:Static local:MoveLearnItemC.I}}"/>
        </StackPanel>
        <Grid VerticalAlignment="Top" Margin="235,15,15,0">
            <Grid.Resources>
                <Style TargetType="{x:Type RowDefinition}">
                    <Setter Property="Height" Value="25"/>
                </Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="TextAlignment" Value="Right"/>
                    <Setter Property="Padding" Value="1,1,0,3"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="ToolTip" Value="{Binding [Base Stats],Source={x:Static pm:DataService.String}}"/>
                </Style>
                <Style x:Key="EvNumeric" TargetType="{x:Type ui:NumericUpdown}">
                    <Setter Property="Width" Value="86"/>
                    <Setter Property="DragScale" Value="0.25"/>
                    <Setter Property="Minimum" Value="0"/>
                    <Setter Property="Maximum" Value="255"/>
                    <Setter Property="SmallChange" Value="4"/>
                    <Setter Property="LargeChange" Value="4"/>
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="63,0" MappingMode="Absolute">
                                <GradientStop Color="#787885"/>
                                <GradientStop Color="#f2f2f2" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="#4C808080"/>
                    <Setter Property="Grid.Column" Value="2"/>
                    <Setter Property="Margin" Value="3,0"/>
                    <Setter Property="ToolTip" Value="{Binding [Effort Values], Source={x:Static pm:DataService.String}}"/>
                </Style>
                <Style x:Key="IvNumeric" TargetType="{x:Type ui:NumericUpdown}">
                    <Setter Property="Maximum" Value="31"/>
                    <Setter Property="Grid.Column" Value="3"/>
                    <Setter Property="BorderBrush" Value="#4C808080"/>
                    <Setter Property="Foreground" Value="Gray"/>
                    <Setter Property="Margin" Value="3,0"/>
                    <Setter Property="ToolTip" Value="{Binding [Individual Values], Source={x:Static pm:DataService.String}}"/>
                </Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Setter Property="ContentTemplate" Value="{x:Static ui:Labels.MultipliedValue}" />
                    <Setter Property="Grid.Column" Value="1" />
                    <Setter Property="Margin" Value="3,0,0,0" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto" MinWidth="50"/>
                <ColumnDefinition Width="*" MinWidth="92"/>
                <ColumnDefinition Width="Auto" MinWidth="44"/>
                <ColumnDefinition Width="Auto" MinWidth="35"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <ui:ClearableComboBox Grid.Column="1" ItemsSource="{x:Static local:PokemonEnum.Natures}" SelectedItem="{Binding Model.Nature}" ItemTemplate="{x:Static ui:Controls.LocalizedText}"/>
            <TextBlock VerticalAlignment="Center" Foreground="{x:Static ui:Brushes.MagentaM}" Grid.Column="2" Grid.ColumnSpan="3" HorizontalAlignment="Right">
                <Run Text="{Binding [Remaining EV Points], Mode=OneWay, Source={x:Static pm:DataService.String}}"/>
                <Run Text="{Binding RemainingEv, Mode=OneWay}"/>
        		<TextBlock.Style>
        			<Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed"/>
        				<Style.Triggers>
        					<DataTrigger Binding="{Binding HasRemainingEv}" Value="True">
        						<Setter Property="Visibility" Value="Visible"/>
        					</DataTrigger>
        				</Style.Triggers>
        			</Style>
        		</TextBlock.Style>
            </TextBlock>
            <Button Command="{Binding ResetEvCommand}" Content="{Binding [Reset], Source={x:Static pm:DataService.String}}" Grid.Column="2" Width="86" FontSize="12" HorizontalContentAlignment="Right">
                <Button.Effect>
                    <DropShadowEffect BlurRadius="3" Color="White" ShadowDepth="0" Opacity="1"/>
                </Button.Effect>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{x:Static ui:Controls.XButton}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RemainingEv}" Value="510">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="2" Grid.Row="7" FontWeight="Bold" Text="{Binding [Hidden Power], Mode=OneWay, Source={x:Static pm:DataService.String}}"/>
            <ui:ClearableComboBox Margin="3,0" Grid.Column="3" Grid.Row="7" ItemsSource="{x:Static local:PokemonEnum.HiddenPowerTypes}" ItemTemplate="{x:Static ui:Labels.BattleType}">
                <ui:ClearableComboBox.Resources>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Width" Value="39"/>
                    </Style>
                </ui:ClearableComboBox.Resources>
                <ui:ClearableComboBox.SelectedItem>
                    <MultiBinding Converter="{x:Static local:HiddenPowerC.I}">
                        <Binding Path="Model.HpIv"/>
                        <Binding Path="Model.AtkIv"/>
                        <Binding Path="Model.DefIv"/>
                        <Binding Path="Model.SpeedIv"/>
                        <Binding Path="Model.SpAtkIv"/>
                        <Binding Path="Model.SpDefIv"/>
                    </MultiBinding>
                </ui:ClearableComboBox.SelectedItem>
            </ui:ClearableComboBox>
            <TextBlock VerticalAlignment="Center" Grid.Column="4" Grid.Row="7" Padding="0">
                <Run Text="{Binding HiddenPowerPower, Mode=OneWay}"/>
                <Run Text="{Binding [Power], Mode=OneWay, Source={x:Static pm:DataService.String}}"/>
            </TextBlock>

            <Label Content="{Binding [Nature], Source={x:Static pm:DataService.String}}" Margin="0,0,10,0"/>
            <Label Content="{Binding [Hp], Source={x:Static pm:DataService.String}}" Grid.Row="1" Margin="0,0,10,0"/>
            <Label Content="{Binding [Atk], Source={x:Static pm:DataService.String}}" Grid.Row="2" Margin="0,0,10,0"/>
            <Label Content="{Binding [Def], Source={x:Static pm:DataService.String}}" Grid.Row="3" Margin="0,0,10,0"/>
            <Label Content="{Binding [SpAtk], Source={x:Static pm:DataService.String}}" Grid.Row="4" Margin="0,0,10,0"/>
            <Label Content="{Binding [SpDef], Source={x:Static pm:DataService.String}}" Grid.Row="5" Margin="0,0,10,0"/>
            <Label Content="{Binding [Speed], Source={x:Static pm:DataService.String}}" Grid.Row="6" Margin="0,0,10,0"/>

            <TextBlock Text="{Binding PokemonType.BaseHp}" Grid.Row="1" Grid.Column="4"/>
            <TextBlock Text="{Binding PokemonType.BaseAtk}" Grid.Row="2" Grid.Column="4"/>
            <TextBlock Text="{Binding PokemonType.BaseDef}" Grid.Row="3" Grid.Column="4"/>
            <TextBlock Text="{Binding PokemonType.BaseSpAtk}" Grid.Row="4" Grid.Column="4"/>
            <TextBlock Text="{Binding PokemonType.BaseSpDef}" Grid.Row="5" Grid.Column="4"/>
            <TextBlock Text="{Binding PokemonType.BaseSpeed}" Grid.Row="6" Grid.Column="4"/>

            <ui:NumericUpdown Style="{StaticResource IvNumeric}" Value="{Binding Model.HpIv}" Grid.Row="1"/>
            <ui:NumericUpdown Style="{StaticResource IvNumeric}" Value="{Binding Model.AtkIv}" Grid.Row="2"/>
            <ui:NumericUpdown Style="{StaticResource IvNumeric}" Value="{Binding Model.DefIv}" Grid.Row="3"/>
            <ui:NumericUpdown Style="{StaticResource IvNumeric}" Value="{Binding Model.SpAtkIv}" Grid.Row="4"/>
            <ui:NumericUpdown Style="{StaticResource IvNumeric}" Value="{Binding Model.SpDefIv}" Grid.Row="5"/>
            <ui:NumericUpdown Style="{StaticResource IvNumeric}" Value="{Binding Model.SpeedIv}" Grid.Row="6"/>

            <ui:NumericUpdown Value="{Binding Model.HpEv, Mode=TwoWay}" Style="{StaticResource EvNumeric}" Grid.Row="1"/>
            <ui:NumericUpdown Value="{Binding Model.AtkEv, Mode=TwoWay}" Style="{StaticResource EvNumeric}" Grid.Row="2"/>
            <ui:NumericUpdown Value="{Binding Model.DefEv, Mode=TwoWay}" Style="{StaticResource EvNumeric}" Grid.Row="3"/>
            <ui:NumericUpdown Value="{Binding Model.SpAtkEv, Mode=TwoWay}" Style="{StaticResource EvNumeric}" Grid.Row="4"/>
            <ui:NumericUpdown Value="{Binding Model.SpDefEv, Mode=TwoWay}" Style="{StaticResource EvNumeric}" Grid.Row="5"/>
            <ui:NumericUpdown Value="{Binding Model.SpeedEv, Mode=TwoWay}" Style="{StaticResource EvNumeric}" Grid.Row="6"/>

            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="1" Text="{Binding Hp}" Style="{x:Null}" Margin="3,0,0,0">
        		<TextBlock.Effect>
        			<DropShadowEffect BlurRadius="2" ShadowDepth="1" Color="#a0a0a0" />
        		</TextBlock.Effect></TextBlock>
            <ContentControl Grid.Row="2" Content="{Binding Atk}" />
            <ContentControl Grid.Row="3" Content="{Binding Def}" />
            <ContentControl Grid.Row="4" Content="{Binding SpAtk}" />
            <ContentControl Grid.Row="5" Content="{Binding SpDef}" />
            <ContentControl Grid.Row="6" Content="{Binding Speed}" />
        </Grid>
        <ListView Margin="0,265,0,15" MinHeight="100" x:Name="learnsetlist" ItemsSource="{Binding Learnset}" VirtualizingStackPanel.VirtualizationMode="Recycling" BorderThickness="0">
        	<ListView.ItemContainerStyle>
        		<Style TargetType="{x:Type ListViewItem}">
        			<Setter Property="Margin" Value="0,0,0,1"/>
        			<Setter Property="VerticalContentAlignment" Value="Center"/>
        			<Setter Property="Foreground" Value="Black"/>
        			<Setter Property="Template">
        				<Setter.Value>
        					<ControlTemplate TargetType="{x:Type ListViewItem}">
        						<Border BorderBrush="{TemplateBinding Background}" BorderThickness="0,3" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        							<StackPanel Margin="5,1">
        								<GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <ContentPresenter x:Name="des" HorizontalAlignment="Stretch" Margin="30,1,0,0" Content="{Binding Content.MoveType.Description, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{x:Static ui:Controls.LocalizedDataText}" Visibility="Collapsed">
                                            <ContentPresenter.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="TextWrapping" Value="Wrap"/>
                                                </Style>
                                            </ContentPresenter.Resources>
                                        </ContentPresenter>
                                    </StackPanel>
        						</Border>
        						<ControlTemplate.Triggers>
        							<Trigger Property="IsMouseOver" Value="true">
        								<Setter Property="Background" Value="#e0e0e0"/>
        							</Trigger>
        							<Trigger Property="IsSelected" Value="true">
        								<Setter Property="Background" Value="{x:Static ui:Brushes.SelectedItemBg}"/>
        								<Setter TargetName="des" Property="Visibility" Value="Visible"/>
        							</Trigger>
        						</ControlTemplate.Triggers>
        					</ControlTemplate>
        				</Setter.Value>
        			</Setter>
        		</Style>
        	</ListView.ItemContainerStyle>
        	<ListView.View>
        		<GridView>
        			<GridView.ColumnHeaderContainerStyle>
        				<Style TargetType="{x:Type GridViewColumnHeader}">
        					<Setter Property="Width" Value="Auto"/>
        					<Setter Property="MinWidth" Value="50"/>
        					<Setter Property="FontWeight" Value="Bold"/>
        					<Setter Property="Height" Value="23"/>
        					<Setter Property="Background">
        						<Setter.Value>
        							<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
        								<GradientStop Color="White" Offset="0.4"/>
        								<GradientStop Color="LightGray" Offset="1"/>
        							</LinearGradientBrush>
        						</Setter.Value>
        					</Setter>
        				</Style>
        			</GridView.ColumnHeaderContainerStyle>
        			<GridViewColumn Width="Auto" li:SortOnHeaderClick.SortProperty="IsSelected">
        				<GridViewColumn.HeaderContainerStyle>
        					<Style TargetType="{x:Type GridViewColumnHeader}">
        						<Setter Property="Background">
        							<Setter.Value>
        								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
        									<GradientStop Color="White" Offset="0.4"/>
        									<GradientStop Color="LightGray" Offset="1"/>
        								</LinearGradientBrush>
        							</Setter.Value>
        						</Setter>
                                <Setter Property="MinWidth" Value="15"/>
        					</Style>
        				</GridViewColumn.HeaderContainerStyle>
        				<GridViewColumn.CellTemplate>
        					<DataTemplate>
        						<CheckBox IsChecked="{Binding IsSelected}" Margin="15,0,0,0"/>
        					</DataTemplate>
        				</GridViewColumn.CellTemplate>
        			</GridViewColumn>
        			<GridViewColumn Header="{Binding [Name], Source={x:Static pm:DataService.String}}" DisplayMemberBinding="{Binding Name.Value}"/>
        			<GridViewColumn Header="{Binding [Type], Source={x:Static pm:DataService.String}}" li:SortOnHeaderClick.SortProperty="MoveType.Type">
        				<GridViewColumn.CellTemplate>
        					<DataTemplate>
        						<ContentPresenter Width="45" Content="{Binding MoveType.Type}" ContentTemplate="{x:Static ui:Labels.BattleType}"/>
        					</DataTemplate>
        				</GridViewColumn.CellTemplate>
        			</GridViewColumn>
        			<GridViewColumn Header="{Binding [Category], Source={x:Static pm:DataService.String}}" li:SortOnHeaderClick.SortProperty="MoveType.Category">
        				<GridViewColumn.CellTemplate>
        					<DataTemplate>
        						<ContentPresenter Width="45" Content="{Binding MoveType.Category}" ContentTemplate="{x:Static ui:Labels.MoveCategory}"/>
        					</DataTemplate>
        				</GridViewColumn.CellTemplate>
        			</GridViewColumn>
        			<GridViewColumn Header="{Binding [Power], Source={x:Static pm:DataService.String}}" DisplayMemberBinding="{Binding MoveType.Power, ConverterParameter=power, Converter={x:Static local:IntStringC.I}}"/>
        			<GridViewColumn Header="{Binding [PP], Source={x:Static pm:DataService.String}}" DisplayMemberBinding="{Binding MoveType.PP}"/>
        			<GridViewColumn Header="{Binding [Accuracy], Source={x:Static pm:DataService.String}}" DisplayMemberBinding="{Binding MoveType.Accuracy, ConverterParameter=accuracy, Converter={x:Static local:IntStringC.I}}"/>
        		</GridView>
        	</ListView.View>
        	<i:Interaction.Behaviors>
        		<li:SortOnHeaderClick/>
        	</i:Interaction.Behaviors>
        </ListView>
        <ui:UIButton Margin="0,-18,0,0" VerticalAlignment="Top" Content="{Binding [Save], Source={x:Static pm:DataService.String}}" IsEnabled="{Binding IsChanged}" HorizontalAlignment="Right" Background="#FF25110E" Click="Save_Click" d:IsLocked="True"/>
    </Grid>
</UserControl>